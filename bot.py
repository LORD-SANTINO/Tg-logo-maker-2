import os
import requests
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes

# Retrieve tokens from environment variables for Render deployment
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
DEEPAI_API_KEY = os.getenv("DEEPAI_API_KEY")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "Welcome! Type /logo <your description> to generate a logo using AI."
    )

def generate_logo(prompt: str) -> str:
    url = "https://api.deepai.org/api/logo-generator"
    response = requests.post(
        url,
        data={"text": prompt},
        headers={"api-key": DEEPAI_API_KEY},
    )
    result = response.json()
    # Return the image URL generated by DeepAI
    return result.get("output_url", "")

async def logo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if context.args:
        prompt = " ".join(context.args)
        logo_url = generate_logo(prompt)
        if logo_url:
            await update.message.reply_photo(logo_url)
        else:
            await update.message.reply_text(
                "Sorry, something went wrong with the logo generation."
            )
    else:
        await update.message.reply_text(
            "Please provide a description after /logo, e.g. /logo Futuristic Tech"
        )

def main():
    app = Application.builder().token(TELEGRAM_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("logo", logo))
    app.run_polling()

if __name__ == "__main__":
    main()
